name: CI
on: push

permissions:
  contents: read
  id-token: write

env:
  ARM_E2E_CLIENT_ID: "${{ secrets.ARM_CLIENT_ID }}"
  ARM_E2E_CLIENT_SECRET: "${{ secrets.ARM_CLIENT_SECRET }}"
  ARM_E2E_TENANT_ID: "${{ secrets.ARM_TENANT_ID }}"
  ARM_E2E_SUBSCRIPTION_ID: "${{ secrets.ARM_SUBS_ID }}"
  AVIATRIX_CONTROLLER_IP: "18.221.243.38"
  AVIATRIX_USERNAME: "admin"
  AVIATRIX_PASSWORD: "Aviatrix123!"
  avx_user_1: "admin"
  avx_user_2: "admin"
  avx_user_3: "admin"
  avx_user_4: "admin"
  avx_pass_1: "Aviatrix123!"
  avx_pass_3: "Aviatrix123!"
  avx_pass_2: "Aviatrix123!"
  avx_pass_4: "Aviatrix123!"
  avx_ip_1: "18.221.243.38"
  avx_ip_2: "18.221.243.38"
  avx_ip_3: "18.221.243.38"
  avx_ip_4: "18.221.243.38"

jobs:
  
  build:
    name: Build
    runs-on: self-hosted
    if: github.repository == 'jlin880/automation_test_scripts'
    outputs:
      folders: ${{ steps.get_folders.outputs.folders }}
    
    steps:

      - name: Get folders
        run: |
          # Replace this with your script to get the folders
          # FOLDERS='["./test_cases/Firewall_Network/centralized_firenet"]'
          FOLDERS='["./test_cases/Firewall_Network/centralized_firenet", "./test_cases/Firewall_Network/firenet","./test_cases/Transit_Network/transit_gateway","./test_cases/Transit_Network/transit_gateway_firenet","./test_cases/Transit_Network/transit_gateway_azure","./test_cases/Transit_Network/transit_gateway_gcp","./test_cases/Transit_Network/transit_gateway_oracle","./test_cases/Transit_Network/transit_gateway_peering","./test_cases/Transit_Network/spoke_gateway_oracle","./test_cases/Transit_Network/spoke_gateway","./test_cases/Transit_Network/spoke_gateway_azure","./test_cases/Transit_Network/spoke_gateway_gcp","./test_cases/Transit_Network/spoke_gateway_sdnat","./test_cases/Transit_Network/spoke_gateway_custom_routes","./test_cases/Transit_Network/gateway_group/aws","./test_cases/Transit_Network/gateway_group/azure","./test_cases/Transit_Network/vgw_conn","./test_cases/Transit_Network/external_device_conn","./test_cases/Transit_Network/azure_vng_conn","./test_cases/Transit_Network/bgp_on_spoke","./test_cases/Transit_Network/transit_segmentation","./test_cases/Transit_Network/site2cloud_unmapped","./test_cases/Controller/controller_config","./test_cases/Controller/vpn_user_accelerator","./test_cases/Controller/vpn_user","./test_cases/Controller/vpn_management","./test_cases/Controller/saml_endpoint","./test_cases/Controller/azure_peer","./test_cases/Controller/aws_peer","./test_cases/Controller/firewall","./test_cases/Controller/firewall_tag","./test_cases/Gateway/gateway_aws","./test_cases/Gateway/gateway_vpn","./test_cases/Gateway/gateway_ldap_duo","./test_cases/Gateway/gateway_okta","./test_cases/Gateway/gateway_azure","./test_cases/Gateway/gateway_gcp","./test_cases/Gateway/gateway_insane","./test_cases/Gateway/gateway_azure_insane","./test_cases/Gateway/gateway_oracle","./test_cases/Gateway/gateway_oracle_vpn","./test_cases/Gateway/gateway_designated","./test_cases/Gateway/gateway_encrypt","./test_cases/Gateway/fqdn","./test_cases/Gateway/geo_vpn","./test_cases/Gateway/tunnel","./test_cases/Gateway/trans_peer"]'
          echo "::set-output name=folders::$FOLDERS"
        id: get_folders

      - name: Add Git to PATH
        run: |
          sudo apt-get update
          sudo apt-get install git -y
          export PATH="$PATH:/usr/bin/git"
        shell: bash

      - name: Checkout code
        uses: actions/checkout@v2
        with:
          ref: ${{ github.ref }}
          submodules: 'recursive'

      - name: Get actual working directory
        id: whereami
        run: echo "dir=$(pwd)" >> $GITHUB_OUTPUT

      - name: Install azure-cli
        run: |
          sudo apt-get install unzip curl wget git -qy
          sudo apt-get update
          sudo apt install -y python-pip
          sudo apt-get update
          pip install wheel setuptools
          pip install pytest-json
          sudo apt-get install python3-pip
          export PATH=$PATH:~/.local/bin
          pip3 install --user pytest-json azure-cli
        continue-on-error: true
      
      - name: Mark workspace as git safe.directory
        shell: bash
        run: |
          git config --global --add safe.directory ${GITHUB_WORKSPACE}
          git config --global --add safe.directory ${GITHUB_WORKSPACE}/webassets

      - name: Checkout code
        uses: actions/checkout@v2
        with:
          ref: ${{ github.ref }}
          submodules: 'recursive'

      - name: List available actions
        run: |
          ls ./.github/actions

  test:
    needs: build
    runs-on: self-hosted
    strategy:
      matrix:
        folder: ${{ fromJson(needs.build.outputs.folders) }}
      max-parallel: 3
    steps:
      - name: Checkout code
        uses: actions/checkout@v2
        with:
          ref: ${{ github.ref }}
          submodules: 'recursive'

      - name: Get Ubuntu version
        run: echo "::set-output name=ubuntu_version::$(lsb_release -rs)"
        id: ubuntu_version
        
      - name: Update Python and AWS CLI
        if: startsWith(runner.os, 'Linux') && contains(github.event.head_commit.message, 'update awscli')
        run: |
          ubuntu_version=${{ steps.ubuntu_version.outputs.ubuntu_version }}
          if [ "$ubuntu_version" = "20.04" ]; then
            sudo apt-get update
            sudo apt-get install -y python3-pip
            pip3 install awscli --upgrade
          elif [ "$ubuntu_version" = "18.04" ]; then
            sudo apt-get update
            sudo apt-get install -y python3-pip
            pip3 install awscli --upgrade
          else
            echo "Unsupported Ubuntu version: $ubuntu_version"
            exit 1


      - name: Add Git to PATH
        run: |
          sudo apt-get update
          sudo apt-get install git -y
          export PATH="$PATH:/usr/bin/git"
        shell: bash

      - name: Run Terraform and Pytest
        uses: ./.github/actions/tf-actions
        with:
          folders: ${{ matrix.folder }}
          shell: bash
        continue-on-error: true

      - name: Create combined results
        id: create-results-json
        run: |
          cd ${{ github.workspace }}/Terraform_Scripts_TF0.13
          touch combined-results.json

      - name: Combine test results
        id: combine-results
        run: |
          cd ${{ github.workspace }}/Terraform_Scripts_TF0.13
          for folder in $(find . -type d -name "test-output"); do
            echo "Combining test results in folder: $folder/test-results.json"
            cat "$folder/test-results.xml" >> test-results.xml.tmp
            cat "$folder/test-results.json" | jq '.testsuites.testsuite |= [.[] | .name = "'"${folder%/*}"': " + .name]' >> test-results.json.tmp
          done

          # jq -s '.[0].testsuites.testsuite as $json1 | .[1].testsuites.testsuite as $json2 | {testsuites: {testsuite: ($json1 + $json2) } }' test-results.json.tmp test-results.xml.tmp > combined-results.json

          if [ $? -eq 0 ]; then
            echo "Test results successfully combined"
            echo "Contents of test-results.json.tmp:"
            cat test-results.json.tmp
            echo "Contents of test-results.xml.tmp:"
            cat test-results.xml.tmp
          else
            echo "Error combining test results"
            echo "Contents of test-results.json.tmp:"
            cat test-results.json.tmp
            echo "Contents of test-results.xml.tmp:"
            cat test-results.xml.tmp
          fi

        shell: bash
        continue-on-error: true
      
      - name: Install AWS CLI
        run: |
          sudo apt-get update
          sudo apt-get install -y awscli
          sudo apt-get update
          sudo apt-get install libssl-dev libffi-dev
          pip install --upgrade cryptography
        shell: bash

     